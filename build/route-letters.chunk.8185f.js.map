{"version":3,"sources":["webpack:///./routes/letters/index.js","webpack:///./routes/letters/style.css"],"names":["Letters","state","wordCheckEmployed","seconds","definitions","letterCount","letters","playMode","secondsDegrees","computerChoicesOpen","enteredText","wordMismatch","getVowel","vowelsArray","total","i","length","console","log","threshold","Math","floor","random","setState","checkLetters","getConsonant","consonantsArray","this","startPlayback","Audio","play","startTimer","getComputerAnagrams","then","catch","error","timer","setInterval","countDown","bind","countSeconds","clearInterval","letterArray","letterString","join","slice","axios","get","headers","response","data","computerAnagrams","checkWord","e","preventDefault","wordToCheck","event","target","value","toLowerCase","lettersLowerCase","split","every","letter","includes","checkWordInDictionary","showComputerChoices","playAgain","render","class","style","profile","innerContainer","instructionContainer","instructionText","instructionTextOff","buttonContainer","button","buttonOff","onClick","letterContainer","letterDiv","startGame","playAgainContainer","clock","clockOff","clockFace","position","top","left","transformOrigin","transform","background","height","width","form","formOff","name","onSubmit","column","answer","id","type","wordContainer","map","result","definition","listContainer","listContainerOff","computerChoices","computerChoicesOff","href","link","linkOff","computerChoicesShown","computerChoicesHidden","word","Component","module","exports"],"mappings":"oMAOqBA,E,oJACnBC,MAAQ,CACNC,mBAAmB,EACnBC,QAAS,GACTC,YAAa,GACbC,YAAa,EACbC,QAAS,GACTC,SAAU,kBACVC,eAAgB,GAChBC,qBAAqB,EACrBC,YAAa,GACbC,cAAc,G,EAIhBC,SAAW,WAWT,IAVA,IAAMC,EAAc,CAClB,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,IAIJC,EAAQ,EACHC,EAAI,EAAGA,EAAIF,EAAYG,SAAUD,EACxCD,GAASD,EAAYE,GAAG,GAG1BE,QAAQC,IAAI,CAAEJ,UAGd,IAAMK,EAAYC,KAAKC,MAAMD,KAAKE,SAAWR,GAE7CG,QAAQC,IAAI,CAAEC,cAGdL,EAAQ,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,SAAUD,EAKxC,IAHAD,GAASD,EAAYE,GAAG,KAGXI,EAAW,CAEtB,EAAKI,SACH,CACEjB,QAAS,GAAF,OAAM,EAAKL,MAAMK,QAAjB,CAHSO,EAAYE,GAAG,KAI/BV,YAAa,EAAKJ,MAAMI,YAAc,IAExC,kBAAM,EAAKmB,kBAEb,Q,EAKNC,aAAe,WA2Bb,IA1BA,IAAMC,EAAkB,CACtB,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,GACN,CAAC,IAAK,IAIJZ,EAAQ,EACHC,EAAI,EAAGA,EAAIW,EAAgBV,SAAUD,EAC5CD,GAASY,EAAgBX,GAAG,GAG9BE,QAAQC,IAAI,CAAEJ,UAGd,IAAMK,EAAYC,KAAKC,MAAMD,KAAKE,SAAWR,GAG7CA,EAAQ,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIW,EAAgBV,SAAUD,EAK5C,IAHAD,GAASY,EAAgBX,GAAG,KAGfI,EAAW,CAEtB,EAAKI,SACH,CACEjB,QAAS,GAAF,OAAM,EAAKL,MAAMK,QAAjB,CAHaoB,EAAgBX,GAAG,KAIvCV,YAAa,EAAKJ,MAAMI,YAAc,IAExC,kBAAM,EAAKmB,kBAEb,Q,4HAKNA,aAAA,WACiC,IAA3BG,KAAK1B,MAAMI,cACbY,QAAQC,IAAIS,KAAK1B,MAAMI,aACvBsB,KAAKJ,SAAS,CAAEhB,SAAU,QAASJ,QAAS,O,EAIhDyB,cAAA,WAEE,OADqB,IAAIC,MAAM,oCAAoCC,Q,EAIrEC,WAAA,WAEEJ,KAAKK,oBAAoBL,KAAK1B,MAAMK,SAEpCW,QAAQC,IAAIS,KAAK1B,MAAME,SACnBwB,KAAK1B,MAAME,SAAWwB,KAAK1B,MAAME,QAAU,IAC7Cc,QAAQC,IAAI,uCAEZS,KAAKC,gBACFK,MAAK,WACJhB,QAAQC,IAAI,6CAEbgB,OAAM,SAACC,GACNlB,QAAQC,IAAI,gCACZD,QAAQC,IAAI,gCACZD,QAAQC,IAAIiB,MAEhBR,KAAKS,MAAQC,YAAYV,KAAKW,UAAUC,KAAKZ,MAAO,O,EAIxDW,UAAA,WAEErB,QAAQC,IAAI,iCAEZ,IAAIsB,EAAeb,KAAK1B,MAAME,QAAU,EAExCwB,KAAKJ,SAAS,CACZpB,QAASqC,EACThC,eAHmBmB,KAAK1B,MAAMO,eAAiB,IAO5B,IAAjBgC,IACFC,cAAcd,KAAKS,OACnBT,KAAKJ,SAAS,CACZhB,SAAU,e,EAKhByB,oBAAA,SAAoBU,GAAa,WAC/BzB,QAAQC,IAAIwB,GACZ,IAAMC,EAAeD,EAAYE,KAAK,IAAIC,MAAM,EAAG,GACnD5B,QAAQC,IAAI,CAAEyB,iBAEdG,IACGC,IADH,2DAE+DJ,EAF/D,cAGI,CACEK,QAAS,CACP,kBAAmB,4CACnB,iBACE,wDAIPf,MAAK,SAACgB,GACLhC,QAAQC,IAAI+B,EAASC,MACrB,EAAK3B,SAAS,CAAE4B,iBAAkBF,EAASC,UAE5ChB,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,O,EAIlBiB,UAAA,SAAUC,GAAG,WACXA,EAAEC,iBACF,IAAMC,EAAcC,MAAMC,OAAN,UAA0BC,MAAMC,cAC9CC,EAAmBjC,KAAK1B,MAAMK,QAAQsC,KAAK,KAAKe,cAAcE,MAAM,KAE1E5C,QAAQC,IAAIqC,GACZtC,QAAQC,IAAIqC,EAAYM,MAAM,KAC9B5C,QAAQC,IAAIS,KAAK1B,MAAMK,SAEpBiD,EAAYM,MAAM,IAAIC,OAAM,SAAAC,GAAM,OAAIH,EAAiBI,SAASD,MACjEpC,KAAKJ,SAAS,CACZb,YAAa6C,EACbrD,mBAAmB,EACnBS,cAAc,IACb,kBAAM,EAAKsD,sBAAsBV,MAGpC5B,KAAKJ,SAAS,CACZb,YAAa6C,EACbrD,mBAAmB,EACnBS,cAAc,K,EAKpBsD,sBAAA,SAAsBV,GAAY,WAChC5B,KAAKJ,SAAS,CACZnB,YAAa,GACbF,mBAAmB,IASrB4C,IAAMC,IAAN,2CAAqDQ,EAArD,gBAPa,CACXP,QAAS,CACP,kBAAmB,4BACnB,iBAAkB,wDAMrBf,MAAK,SAACgB,GACLhC,QAAQC,IAAI+B,EAASC,MACrB,EAAK3B,SAAS,CACZnB,YAAa6C,EAASC,KAAT,YACbhD,mBAAmB,OAGtBgC,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,O,EAIhB+B,oBAAA,WACEvC,KAAKJ,SAAS,CAACd,qBAAqB,K,EAWtC0D,UAAA,WACExC,KAAKJ,SAAS,CACZhB,SAAU,kBACVF,YAAa,EACbC,QAAS,GACTG,qBAAqB,EACrBD,eAAgB,GAChBE,YAAa,GACbC,cAAc,EACdP,YAAa,GACbF,mBAAmB,K,EAOvBkE,OAAA,WAIE,OAHAnD,QAAQC,IAAIS,KAAK1B,MAAMM,UACvBU,QAAQC,IAAIS,KAAK1B,MAAMG,aAGrB,mBAAKiE,MAAOC,IAAMC,SAChB,mBAAKF,MAAOC,IAAME,gBAClB,mBAAKH,MAAOC,IAAMG,sBAChB,iBACEJ,MAC0B,oBAAxB1C,KAAK1B,MAAMM,SACP+D,IAAMI,gBACNJ,IAAMK,oBAJd,oBAWF,mBAAKN,MAAOC,IAAMM,iBAChB,sBACEP,MAC0B,oBAAxB1C,KAAK1B,MAAMM,SAAiC+D,IAAMO,OAASP,IAAMQ,UAEnEC,QAASpD,KAAKf,UAJhB,SAQA,sBACEyD,MAC0B,oBAAxB1C,KAAK1B,MAAMM,SAAiC+D,IAAMO,OAASP,IAAMQ,UAEnEC,QAASpD,KAAKF,cAJhB,cAUF,mBAAK4C,MAAOC,IAAMU,iBAChB,mBAAKX,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,KAEnD,mBAAK+D,MAAOC,IAAMW,WACftD,KAAK1B,MAAMK,QAAQ,GAAKqB,KAAK1B,MAAMK,QAAQ,GAAK,MAIrD,mBAAK+D,MAAOC,IAAMY,WAChB,sBACEb,MAC0B,UAAxB1C,KAAK1B,MAAMM,SAAuB+D,IAAMO,OAASP,IAAMQ,UAEzDC,QAASpD,KAAKI,WAAWQ,KAAKZ,OAJhC,oBAUF,mBAAK0C,MAAOC,IAAMa,oBAChB,sBACEd,MAC0B,aAAxB1C,KAAK1B,MAAMM,SAA0B+D,IAAMO,OAASP,IAAMQ,UAE5DC,QAASpD,KAAKwC,UAAU5B,KAAKZ,OAJ/B,eAUF,mBAAK0C,MAA+B,aAAxB1C,KAAK1B,MAAMM,SAA0B+D,IAAMc,MAAQd,IAAMe,UACnE,mBAAKhB,MAAOC,IAAMgB,WAChB,mBACEhB,MAAO,CACLiB,SAAU,WACVC,IAAK,MACLC,KAAM,KACNC,gBAAiB,OACjBC,UAAW,UAAUhE,KAAK1B,MAAMO,eAAvB,OACToF,WAAY,OACZC,OAAQ,MACRC,MAAO,WAMf,oBAAMzB,MAA+B,aAAxB1C,KAAK1B,MAAMM,SAA0B+D,IAAMyB,KAAMzB,IAAM0B,QAASC,KAAK,cAAcC,SAAUvE,KAAKyB,UAAUb,KAAKZ,OAC5H,mBAAK0C,MAAOC,IAAM6B,QAChB,qBAAO9B,MAAOC,IAAM8B,OAAQC,GAAG,cAAcJ,KAAK,YAAYK,KAAK,OAAO5C,MAAO/B,KAAK1B,MAAMS,cAE5F,qBAAO4F,KAAK,SAASjC,MAAOC,IAAMO,OAAQnB,MAAM,8BAEhD,mBAAKW,MAAOC,IAAMiC,eACf5E,KAAK1B,MAAMC,mBAAqByB,KAAK1B,MAAMU,aAA3C,MAAgEgB,KAAK1B,MAAMS,YAA3E,iDAAyIiB,KAAK1B,MAAMC,oBAAsByB,KAAK1B,MAAMU,cAAkD,IAAlCgB,KAAK1B,MAAMG,YAAYY,OAAnF,MAClIW,KAAK1B,MAAMS,YADuH,4BAExI,uBACF,wBAAOiB,KAAK1B,MAAMC,oBAAsByB,KAAK1B,MAAMU,cAAgBgB,KAAK1B,MAAMG,YAAYY,OAAS,EAA5F,MAAsGW,KAAK1B,MAAMS,YAAjH,wCAAsK,IAC7K,0BAAMiB,KAAK1B,MAAMG,YAAYoG,KAAI,SAACC,GAAD,OAE3B,sBAAKA,EAAOC,mBAUxB,mBAAKrC,MAA+B,aAAxB1C,KAAK1B,MAAMM,SAA0B+D,IAAMqC,cAAerC,IAAMsC,kBAC1E,mBAAKvC,MAA+B,aAAxB1C,KAAK1B,MAAMM,SAA0B+D,IAAMuC,gBAAiBvC,IAAMwC,oBAC1EnF,KAAK1B,MAAMkD,iBAAZ,sBAEyBxB,KAAK1B,MAAMkD,iBAAiBnC,OAFrD,8BAEyFW,KAAK1B,MAAMkD,iBAAiB,GAA5B,OAFzF,iBACG,GAEF,iBAAG4D,KAAK,IAAI1C,MAA+B,aAAxB1C,KAAK1B,MAAMM,SAA0B+D,IAAM0C,KAAO1C,IAAM2C,QAASlC,QAASpD,KAAKuC,oBAAoB3B,KAAKZ,OAA3H,gBAJJ,oBAMI,kBAAI0C,MAAO1C,KAAK1B,MAAMQ,oBAAsB6D,IAAM4C,qBAAuB5C,IAAM6C,uBAC3ExF,KAAK1B,MAAMkD,iBAETxB,KAAK1B,MAAMkD,iBAAiBqD,KAAI,SAACC,GAAD,OAClC,sBAAKA,EAAOW,KAAZ,aAA4BX,EAAOzF,WAFjC,S,GA5ZiBqG,c,iBCNrCC,EAAOC,QAAU,CAAC,QAAU,iBAAiB,eAAiB,wBAAwB,qBAAuB,8BAA8B,gBAAkB,yBAAyB,mBAAqB,4BAA4B,gBAAkB,yBAAyB,gBAAkB,yBAAyB,UAAY,mBAAmB,OAAS,gBAAgB,UAAY,mBAAmB,MAAQ,eAAe,SAAW,kBAAkB,aAAa,oBAAoB,UAAY,mBAAmB,KAAO,cAAc,OAAS,gBAAgB,QAAU,iBAAiB,OAAS,gBAAgB,gBAAkB,yBAAyB,mBAAqB,4BAA4B,qBAAuB,8BAA8B,sBAAwB,+BAA+B,cAAgB,uBAAuB,iBAAmB,0BAA0B,cAAgB,uBAAuB,mBAAqB","file":"route-letters.chunk.8185f.js","sourcesContent":["import { h, Component } from \"preact\";\n// import { useState } from \"preact/hooks\";\nimport axios from \"axios\";\nimport style from \"./style\";\n\n\n\nexport default class Letters extends Component {\n  state = {\n    wordCheckEmployed: false,\n    seconds: 30,\n    definitions: [],\n    letterCount: 0,\n    letters: [],\n    playMode: \"choosingLetters\", // choosingLetters, ready, finished\n    secondsDegrees: 90,\n    computerChoicesOpen: false,\n    enteredText: '',\n    wordMismatch: false,\n  };\n   \n\n  getVowel = () => {\n    const vowelsArray = [\n      [\"A\", 15],\n      [\"E\", 21],\n      [\"I\", 13],\n      [\"O\", 13],\n      [\"U\", 5],\n    ];\n\n    // Get the total weight\n    let total = 1;\n    for (let i = 0; i < vowelsArray.length; ++i) {\n      total += vowelsArray[i][1];\n    }\n\n    console.log({ total });\n\n    // Get random index\n    const threshold = Math.floor(Math.random() * total);\n\n    console.log({ threshold });\n\n    // Find value that meets threshold\n    total = 0;\n    for (let i = 0; i < vowelsArray.length; ++i) {\n      // Add the weight to our running total.\n      total += vowelsArray[i][1];\n\n      // If this value falls within the threshold, we're done!\n      if (total >= threshold) {\n        const randomVowel = vowelsArray[i][0];\n        this.setState(\n          {\n            letters: [...this.state.letters, randomVowel],\n            letterCount: this.state.letterCount + 1,\n          },\n          () => this.checkLetters()\n        );\n        break;\n      }\n    }\n  };\n\n  getConsonant = () => {\n    const consonantsArray = [\n      [\"B\", 2],\n      [\"C\", 3],\n      [\"D\", 6],\n      [\"F\", 2],\n      [\"G\", 3],\n      [\"H\", 2],\n      [\"J\", 1],\n      [\"K\", 1],\n      [\"L\", 5],\n      [\"M\", 4],\n      [\"N\", 8],\n      [\"P\", 4],\n      [\"Q\", 1],\n      [\"R\", 9],\n      [\"S\", 9],\n      [\"T\", 9],\n      [\"V\", 1],\n      [\"W\", 1],\n      [\"X\", 1],\n      [\"Y\", 1],\n      [\"Z\", 1],\n    ];\n\n    // Get the total weight\n    let total = 1;\n    for (let i = 0; i < consonantsArray.length; ++i) {\n      total += consonantsArray[i][1];\n    }\n\n    console.log({ total });\n\n    // Get random index\n    const threshold = Math.floor(Math.random() * total);\n\n    // Find value that meets threshold\n    total = 0;\n    for (let i = 0; i < consonantsArray.length; ++i) {\n      // Add the weight to our running total.\n      total += consonantsArray[i][1];\n\n      // If this value falls within the threshold, we're done!\n      if (total >= threshold) {\n        const randomConsonant = consonantsArray[i][0];\n        this.setState(\n          {\n            letters: [...this.state.letters, randomConsonant],\n            letterCount: this.state.letterCount + 1,\n          },\n          () => this.checkLetters()\n        );\n        break;\n      }\n    }\n  };\n\n  checkLetters() {\n    if (this.state.letterCount === 9) {\n      console.log(this.state.letterCount);\n      this.setState({ playMode: \"ready\", seconds: 30 });\n    }\n  }\n\n  startPlayback() {\n    const audioPromise = new Audio(\"../../assets/audio/countdown.mp3\").play();\n    return audioPromise;\n  }\n\n  startTimer() {\n    // fetch best responses from CountDown API\n    this.getComputerAnagrams(this.state.letters);\n\n    console.log(this.state.seconds);\n    if (this.state.seconds && this.state.seconds > 0) {\n      console.log(\"Attempting to play automatically...\");\n\n      this.startPlayback()\n        .then(() => {\n          console.log(\"The play() Promise fulfilled! Rock on!\");\n        })\n        .catch((error) => {\n          console.log(\"The play() Promise rejected!\");\n          console.log(\"Use the Play button instead.\");\n          console.log(error);\n        });\n      this.timer = setInterval(this.countDown.bind(this), 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    console.log(\"counting down the seconds ...\");\n\n    let countSeconds = this.state.seconds - 1;\n    let secondsDegrees = this.state.secondsDegrees + 360 / 60;\n    this.setState({\n      seconds: countSeconds,\n      secondsDegrees,\n    });\n\n    // Check if we're at zero.\n    if (countSeconds === 0) {\n      clearInterval(this.timer);\n      this.setState({\n        playMode: \"finished\"\n      });\n    }\n  }\n\n  getComputerAnagrams(letterArray) {\n    console.log(letterArray);\n    const letterString = letterArray.join(\"\").slice(0, 9);\n    console.log({ letterString });\n\n    axios\n      .get(\n        `https://danielthepope-countdown-v1.p.rapidapi.com/solve/${letterString}?variance=1`,\n        {\n          headers: {\n            \"x-rapidapi-host\": \"danielthepope-countdown-v1.p.rapidapi.com\",\n            \"x-rapidapi-key\":\n              \"5e458fcdc9msheb1cb44d935da2fp1cbb49jsnd1ef623fd51c\",\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        this.setState({ computerAnagrams: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  checkWord(e) {\n    e.preventDefault();\n    const wordToCheck = event.target['inputWord'].value.toLowerCase();\n    const lettersLowerCase = this.state.letters.join('|').toLowerCase().split('|');\n\n    console.log(wordToCheck)\n    console.log(wordToCheck.split(''))\n    console.log(this.state.letters)\n    \n    if(wordToCheck.split('').every(letter => lettersLowerCase.includes(letter))) {\n      this.setState({\n        enteredText: wordToCheck,\n        wordCheckEmployed: true,\n        wordMismatch: false,\n      }, () => this.checkWordInDictionary(wordToCheck)\n      )\n    } else {\n      this.setState({\n        enteredText: wordToCheck,\n        wordCheckEmployed: true,\n        wordMismatch: true,\n      })\n    } \n  }\n\n  checkWordInDictionary(wordToCheck){\n    this.setState({\n      definitions: [],\n      wordCheckEmployed: false,\n    })\n    let config = {\n      headers: {\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"5e458fcdc9msheb1cb44d935da2fp1cbb49jsnd1ef623fd51c\"\n      }\n    }\n\n    axios.get(`https://wordsapiv1.p.rapidapi.com/words/${wordToCheck}/definitions/`\n    , config)\n    .then((response) => {\n      console.log(response.data);\n      this.setState({ \n        definitions: response.data['definitions'],\n        wordCheckEmployed: true,\n     });\n    })\n    .catch((error)=> {\n      console.log(error);\n    });\n  }\n\n  showComputerChoices() {\n    this.setState({computerChoicesOpen: true})\n  }\n\n  // clearInput() {\n  //   if(this.state.wordMismatch) {\n  //     this.setState({\n  //       enteredText: '',\n  //       wordMismatch: false})\n  //   }\n  // }\n\n  playAgain() {\n    this.setState({\n      playMode: 'choosingLetters',\n      letterCount: 0,\n      letters: [],\n      computerChoicesOpen: false,\n      secondsDegrees: 90,\n      enteredText: '',\n      wordMismatch: false,\n      definitions: [],\n      wordCheckEmployed: false,\n    })\n  }\n\n \n\n  // Note: `user` comes from the URL, courtesy of our router\n  render() {\n    console.log(this.state.playMode);\n    console.log(this.state.definitions);\n\n    return (\n      <div class={style.profile}>\n        <div class={style.innerContainer}>\n        <div class={style.instructionContainer}>\n          <p\n            class={\n              this.state.playMode === \"choosingLetters\"\n                ? style.instructionText\n                : style.instructionTextOff\n            }\n          >\n            Choose a letter\n          </p>\n        </div>\n\n        <div class={style.buttonContainer}>\n          <button\n            class={\n              this.state.playMode === \"choosingLetters\" ? style.button : style.buttonOff\n            }\n            onClick={this.getVowel}\n          >\n            Vowel\n          </button>\n          <button\n            class={\n              this.state.playMode === \"choosingLetters\" ? style.button : style.buttonOff\n            }\n            onClick={this.getConsonant}\n          >\n            Consonant\n          </button>\n        </div>\n\n        <div class={style.letterContainer}>\n          <div class={style.letterDiv}>\n            {this.state.letters[0] ? this.state.letters[0] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[1] ? this.state.letters[1] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[2] ? this.state.letters[2] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[3] ? this.state.letters[3] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[4] ? this.state.letters[4] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[5] ? this.state.letters[5] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[6] ? this.state.letters[6] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[7] ? this.state.letters[7] : \"?\"}\n          </div>\n          <div class={style.letterDiv}>\n            {this.state.letters[8] ? this.state.letters[8] : \"?\"}\n          </div>\n        </div>\n\n        <div class={style.startGame}>\n          <button\n            class={\n              this.state.playMode === \"ready\" ? style.button : style.buttonOff\n            }\n            onClick={this.startTimer.bind(this)}\n          >\n            Start Countdown\n          </button>\n        </div>\n\n        <div class={style.playAgainContainer}>\n          <button\n            class={\n              this.state.playMode === \"finished\" ? style.button : style.buttonOff\n            }\n            onClick={this.playAgain.bind(this)}\n          >\n            Play again\n          </button>\n        </div>\n\n        <div class={this.state.playMode !== \"finished\" ? style.clock : style.clockOff}>\n          <div class={style.clockFace}>\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"0%\",\n                transformOrigin: \"100%\",\n                transform: `rotate(${this.state.secondsDegrees}deg)`,\n                background: \"aqua\",\n                height: \"4px\",\n                width: \"50%\",\n              }}\n            />\n          </div>\n        </div>\n\n        <form class={this.state.playMode === \"finished\" ? style.form: style.formOff} name=\"wordToCheck\" onSubmit={this.checkWord.bind(this)}>\n          <div class={style.column}>\n            <input class={style.answer} id=\"wordToCheck\" name=\"inputWord\" type=\"text\" value={this.state.enteredText} />\n\n            <input type=\"Submit\" class={style.button} value=\"Check word in dictionary\" />\n          </div>\n            <div class={style.wordContainer}>\n              {this.state.wordCheckEmployed && this.state.wordMismatch ? `❌ '${this.state.enteredText}' - word cannot be derived from letters above!` : this.state.wordCheckEmployed && !this.state.wordMismatch && this.state.definitions.length === 0\n              ? `❌ '${this.state.enteredText}' not found in dictionary`\n              : <div>\n              <span>{this.state.wordCheckEmployed && !this.state.wordMismatch && this.state.definitions.length > 0 ? `✅ '${this.state.enteredText}' found in dictionary! Definition(s):` : \"\"}</span>\n              <ul> {this.state.definitions.map((result) => (\n                \n                    <li>{result.definition}</li>\n                  \n                ))}\n                </ul>\n            </div>}\n                \n            </div>\n        </form>\n\n  \n        <div class={this.state.playMode === \"finished\" ? style.listContainer: style.listContainerOff}>\n          <div class={this.state.playMode === \"finished\" ? style.computerChoices: style.computerChoicesOff}>\n            {!this.state.computerAnagrams\n              ? \"\"\n              : `The computer found ${this.state.computerAnagrams.length} word(s). Longest word has ${this.state.computerAnagrams[0]['length']} characters.  `}\n              <a href=\"#\" class={this.state.playMode === \"finished\" ? style.link : style.linkOff} onClick={this.showComputerChoices.bind(this)}>  Click here</a> to view word(s):\n              \n              <ul class={this.state.computerChoicesOpen ? style.computerChoicesShown : style.computerChoicesHidden}>\n                {!this.state.computerAnagrams\n                  ? \"\"\n                  : this.state.computerAnagrams.map((result) => (\n                  <li>{result.word} - length {result.length}</li>\n                    ))}\n              </ul>\n            </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile__6fhiy\",\"innerContainer\":\"innerContainer__19DEI\",\"instructionContainer\":\"instructionContainer__1uX4q\",\"instructionText\":\"instructionText__3p_sS\",\"instructionTextOff\":\"instructionTextOff__2xav3\",\"buttonContainer\":\"buttonContainer__50ivo\",\"letterContainer\":\"letterContainer__2VFmX\",\"letterDiv\":\"letterDiv__3oknS\",\"button\":\"button__KooYy\",\"buttonOff\":\"buttonOff__1JPbi\",\"clock\":\"clock__2Q8qf\",\"clockOff\":\"clockOff__3Z0pi\",\"clock-face\":\"clock-face__1u-Lb\",\"startGame\":\"startGame__J7iDI\",\"form\":\"form__1jYVl\",\"column\":\"column__3kb4C\",\"formOff\":\"formOff__dfvgw\",\"answer\":\"answer__3ssHz\",\"computerChoices\":\"computerChoices__3qjQ5\",\"computerChoicesOff\":\"computerChoicesOff__3xHsM\",\"computerChoicesShown\":\"computerChoicesShown__2POv-\",\"computerChoicesHidden\":\"computerChoicesHidden__1Qk51\",\"listContainer\":\"listContainer__3iqP2\",\"listContainerOff\":\"listContainerOff__2qPso\",\"wordContainer\":\"wordContainer__24bqx\",\"playAgainContainer\":\"playAgainContainer__6c1WK\"};"],"sourceRoot":""}